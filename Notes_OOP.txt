ООП
--------------------------------------------- 
класс - описание сущности предметной области, позволяющее выделить общие характеристики, состояние, поведение
предметная область - множество всех предметов решаемой проблемы
экземпляр класса- конкретный представитель класса (не стоит отождествлять с обьектом класса)
состояние - набор данных (полей, констаныты, события)
поведение - методы (функции для работы с данными), конструкторы

Обьектно-ориентированный подход - это попытка мыслить и проектировать системы с использованием классов и экземпляров классов

переопределение - @OVERRIDE меняем поведение, которое было до нас
перегрузка - описываем в рамках одной сущности метода, разной сигнатуры(набор типов). переопределяем количество аргументов у метода
---------------------------------------------
ПРинципы ООП:
Инкапсуляция 
свойство системы, позволяющее обьединить данные и методы, работающие с ними в классе, скрыв детали реализации и защитив от пользователя этого класса обьектов
Модификация переменных обьекта должна происходить в самом обьекте

Наследование
public class Magician extends BaseHero - значит Magician яыляентся наследником(производным, дочерним) BaseHero (родительский)

Полиморфизм 
возможность положить в (полиморфную) переменную базового класса любую из его производных.
это свойство системы использовать обьекты с одинаковым интерфейсом без информации о типе и внутренней структуре обьекта

Абстракция(не совсем принцип) - берем предметную область, убираем лишнее, упрощаем без потери смысла


----------------
модификаторы доступа: 
public - доступно везде
private - доступно только в текущем классе
protected - доступно в рамках текущего класса и наследников

this. - обращение к отдельной единице текущей сущности(класса)
super. - обращение к родительскому (базовому) классу

